name: Package ili2pg

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version?'
        required: true

jobs:  
  build:
    strategy:
      matrix:
        os: ['ubuntu-20.04', 'macos-10.15', 'windows-latest']
        include:
          - os: 'ubuntu-20.04'
            label: 'linux'
            package: 'deb'
            icon: 'icons/icon-ili2db-128x128.png'
            asset_prefix: 'ili2pg_'
            asset_suffix: '-1_amd64'
          - os: 'macos-10.15'
            label: 'mac'
            package: 'pkg'
            icon: 'icons/icon-ili2db-128x128.icns'
            asset_prefix: 'ili2pg-'
            asset_suffix: ''
          - os: 'windows-latest'
            label: 'win'
            package: 'exe'
            icon: 'icons/icon-ili2db-128x128.ico'
            asset_prefix: 'ili2pg-'
            asset_suffix: ''
    runs-on: ${{matrix.os}}

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 'Download zipped ili2pg release'
        run: |
          curl -L https://downloads.interlis.ch/ili2pg/ili2pg-${{ github.event.inputs.version }}.zip -o ili2pg.zip

      - name: 'Unzip ili2pg release'
        run: |
          unzip ili2pg.zip

      - name: 'Setup Java 17'
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'liberica'

      - name: 'Get dependencies (jdeps)'
        run: |
          echo "DEPS=$(jdeps --class-path 'libs/*' --multi-release base -recursive --ignore-missing-deps --print-module-deps ili2pg-${{ github.event.inputs.version }}.jar)" >> $GITHUB_ENV
        shell: bash

      - name: 'Create JRE (jlink)'
        run: |
          jlink --add-modules ${{env.DEPS}} --output ili2pg-jre

      - name: 'Copy main jar to libs'
        run: |
          cp ili2pg-${{ github.event.inputs.version }}.jar libs/

      - name: 'Create package (jpackage)'
        run: |
          jpackage --icon ${{matrix.icon}} --name ili2pg --type ${{matrix.package}} --input libs --main-jar ili2pg-${{ github.event.inputs.version }}.jar -d output --runtime-image ili2pg-jre --app-version ${{ github.event.inputs.version }} --java-options -Xmx2g 
        shell: bash

      - name: List all files in output directory
        run: ls -la output
        shell: bash

      - name: List all files in project root directory
        run: ls -la 
        shell: bash

      - name: 'Setup Java 8'
        uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: 'liberica'
          
      - name: Upload file to bucket
        shell: bash
        run: |
          ./gradlew uploadFile 
        env:
          FILENAME: ${{matrix.asset_prefix}}${{ github.event.inputs.version }}${{matrix.asset_suffix}}.${{matrix.package}}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "eu-central-1"
