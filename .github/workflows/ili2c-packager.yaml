name: CI/CD
on:
  push:
    branches:
     - 'main'

env:
  VERSION: 5.2.2

jobs:  
  build:
    strategy:
      matrix:
        os: ['ubuntu-20.04', 'macos-10.15', 'windows-latest']
        include:
          - os: 'ubuntu-20.04'
            label: 'linux'
            package: 'deb'
            icon: 'icons/icon-compiler-128x128.png'
            asset_prefix: 'ili2c_'
            asset_suffix: '-1_amd64'
          - os: 'macos-10.15'
            label: 'mac'
            package: 'pkg'
            icon: 'icons/icon-compiler-128x128.icns'
            asset_prefix: 'ili2c-'
            asset_suffix: ''
          - os: 'windows-latest'
            label: 'win'
            package: 'msi'
            icon: 'icons/icon-compiler-128x128.ico'
            asset_prefix: 'ili2c-'
            asset_suffix: ''
    runs-on: ${{matrix.os}}

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: 'Download zipped ili2c release'
        run: |
          curl -L https://downloads.interlis.ch/ili2c/ili2c-${{env.VERSION}}.zip -o ili2c.zip
      - name: 'Unzip ili2c release'
        run: |
          unzip ili2c.zip
      - name: 'Setup Java 16'
        uses: actions/setup-java@v1
        with:
          java-version: 16
      - name: 'Get dependencies (jdeps)'
        run: |
          echo "DEPS=$(jdeps --class-path './*' --multi-release base -recursive --ignore-missing-deps --print-module-deps ili2c.jar)" >> $GITHUB_ENV
        shell: bash
      - name: 'Create JRE (jlink)'
        run: |
          jlink --add-modules ${{env.DEPS}} --output ili2c-jre
      - name: 'Create package (jpackage)'
        run: |
          jpackage --icon ${{matrix.icon}} --name ili2c --type ${{matrix.package}} --input . --main-jar ili2c.jar -d output --runtime-image ili2c-jre --app-version ${{env.VERSION}}
        shell: bash
      - name: List all files in output directory
        run: ls -la output
        shell: bash
      - name: List all files in project root directory
        run: ls -la 
        shell: bash
      - name: 'Setup Java 8'
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Upload file to bucket
        shell: bash
        run: |
          ./gradlew uploadFile 
        env:
          FILENAME: ${{matrix.asset_prefix}}${{env.VERSION}}${{matrix.asset_suffix}}.${{matrix.package}}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "eu-central-1"
